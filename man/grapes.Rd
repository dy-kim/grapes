% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grapes.R
\name{grapes}
\alias{grapes}
\title{Function \code{grapes}}
\usage{
grapes(..., list = character(0), from = to, to = parent.frame())
}
\arguments{
\item{...}{characters or symbols, names of functions to make into
binary operators.}

\item{list}{character vector of names of functions to make into
binary operators}

\item{from}{either a character scalar or an environment. If an environment,
this is where \code{grapes()} will look for the the functions named in 
\code{...} and \code{list}. If a character string, \code{from} names the 
package where \code{grapes()} will look for functions.}

\item{to}{environment to store the new binary operators.}
}
\description{
Turn a collection of functions into binary operators. For
example, create the binary operator \code{\%cbind\%} from the function
\code{\link{cbind}()} by calling \code{grapes(cbind)}. Then,
you can call \code{sleep \%cbind\% sleep \%cbind\% sleep} to add
to the columns of a data frame while avoiding cumbersome parentheses.
}
\examples{
grapes(rbind, from = "base") # 'from' defaults to your current workspace
nrow(sleep) # 20
longer = sleep \%rbind\% sleep \%rbind\% sleep # No clumsy parentheses!
nrow(longer) # 60. We'd all like to sleep longer.
}

